// Generated by CoffeeScript 1.7.1
(function() {
  var DiscussionFetcher, DiscussionReporter, program, ranger;

  program = require("commander");

  ranger = require("ranger");

  DiscussionFetcher = require("./discussion_fetcher");

  program.version("0.0.1").option("-n, --tendersitename []", "Tender site name").option("-k, --tenderapikey []", "Tender api key").option("-s, --state [new]", "Discussion state, can be new, open or pending").option("-ca, --campfireaccount []", "Campfire account").option("-ck, --campfirekey []", "Campfire api key").option("-cr, --campfireroom []", "Campfire room name").parse(process.argv);

  DiscussionReporter = (function() {
    function DiscussionReporter(name) {
      this.name = name;
      this.tenderSite = program.tendersitename || process.env.TENDER_SITENAME;
      this.tenderApiKey = program.tenderapikey || process.env.TENDER_APIKEY;
      this.campfireAcc = program.campfireaccount || process.env.CAMPFIRE_ACCOUNT;
      this.campfireKey = program.campfirekey || process.env.CAMPFIRE_KEY;
      this.campfireRoom = program.campfireroom || process.env.CAMPFIRE_ROOM;
    }

    DiscussionReporter.prototype.report = function() {
      var fetcher, opts;
      if (!this.tenderSite || !this.tenderApiKey) {
        throw new Error("You need to supply Tender credentials!");
      }
      opts = {
        site: this.tenderSite,
        apiKey: this.tenderApiKey,
        state: program.state
      };
      fetcher = new DiscussionFetcher(opts);
      return fetcher.fetch((function(_this) {
        return function(err, discussions) {
          if (err) {
            throw err;
          }
          if (discussions.length > 0) {
            console.log(discussions);
            return _this._reportToCampfire(discussions);
          }
        };
      })(this));
    };

    DiscussionReporter.prototype._reportToCampfire = function(discussions, cb) {
      var client, discussion, msg, _i, _len;
      if (!this.campfireAcc) {
        return cb();
      }
      client = ranger.createClient(this.campfireAcc, this.campfireKey);
      msg = "Tender discussions that we should attend to:\n";
      for (_i = 0, _len = discussions.length; _i < _len; _i++) {
        discussion = discussions[_i];
        msg += discussion.title + ": " + discussion.href + "\n";
      }
      return client.room(this.campfireRoom, function(theRoom) {
        return theRoom.paste(msg, cb);
      });
    };

    return DiscussionReporter;

  })();

  module.exports = DiscussionReporter;

}).call(this);
